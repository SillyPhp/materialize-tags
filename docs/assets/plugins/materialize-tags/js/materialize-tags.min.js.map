{"version":3,"sources":["materialize-tags.js"],"names":["$","TagsMaterialize","element","options","this","itemsArray","$element","hide","objectItems","itemValue","placeholderText","hasAttribute","attr","inputSize","Math","max","length","$container","$input","appendTo","$label","parent","find","before","build","on","addClass","next","focus","label","parents","hasClass","parentContainer","tags","removeClass","val","makeOptionItemFunction","key","propertyName","item","makeOptionFunction","value","htmlEncode","htmlEncodeContainer","text","html","doGetCaretPosition","oField","iCaretPos","document","selection","oSel","createRange","moveStart","selectionStart","keyCombinationInList","keyDownEvent","lookupList","found","each","index","keyCombination","which","alt","hasOwnProperty","altKey","shift","shiftKey","ctrl","ctrlKey","defaultOptions","tagClass","toString","itemText","itemTitle","freeInput","addOnBlur","maxTags","undefined","maxChars","confirmKeys","onTagExists","$tag","fadeIn","trimValue","allowDuplicates","deleteTagsOnBackspace","deleteTagsOnDeleteKey","MoveTagOnLeftArrow","MoveTagOnRightArrow","autoselect","CapitalizeFirstLetterOnly","prototype","constructor","add","dontPushVal","self","trim","charAt","toUpperCase","slice","match","tagName","items","split","i","pushVal","existing","grep","maxInputLength","beforeItemAddEvent","Event","cancel","trigger","push","data","findInputWrapper","after","blur","prop","$existingTag","filter","remove","other","beforeItemRemoveEvent","inArray","splice","siblings","first","removeAll","pop","refresh","contents","nodeType","nodeValue","map","typeahead","extend","typeaheadjs","typeaheadConfig","typeaheadDatasets","isArray","proxy","obj","datum","valueKey","event","removeAttr","target","$inputWrapper","prev","$prevTag","$nextTag","textLength","ceil","maxLengthReached","substr","preventDefault","closest","destroy","off","removeData","show","input","elt","container","parentNode","fn","materialtags","arg1","arg2","arg3","results","retVal","defaults","Constructor","window","jQuery"],"mappings":"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","file":"materialize-tags.min.js","sourcesContent":["(function ($)\r\n{\r\n    \"use strict\";\r\n\r\n    /**\r\n    * Default Configuration\r\n    *\r\n    * @type {{tagClass: tagClass, itemValue: itemValue, itemText: itemText, itemTitle: itemTitle, freeInput: boolean, addOnBlur: boolean, maxTags: undefined, maxChars: undefined, confirmKeys: number[], onTagExists: onTagExists, trimValue: boolean, allowDuplicates: boolean}}\r\n    */\r\n    var defaultOptions = {\r\n        tagClass                    : tagClass,\r\n        itemValue                   : itemValue,\r\n        itemText                    : itemText,\r\n        itemTitle                   : itemTitle,\r\n        freeInput                   : true,\r\n        addOnBlur                   : true,\r\n        maxTags                     : undefined,\r\n        maxChars                    : undefined,\r\n        confirmKeys                 : [9,13, 44, 188],\r\n        onTagExists                 : onTagExists,\r\n        trimValue                   : true,\r\n        allowDuplicates             : false,\r\n        deleteTagsOnBackspace       : true,\r\n        deleteTagsOnDeleteKey       : true,\r\n        MoveTagOnLeftArrow          : true,\r\n        MoveTagOnRightArrow         : true,\r\n        autoselect                  : false,\r\n        CapitalizeFirstLetterOnly   : false,\r\n    };\r\n\r\n\r\n    function tagClass(item)\r\n    {\r\n        return 'chip';\r\n    }\r\n\r\n    function itemValue(item)\r\n    {\r\n        return item ? item.toString() : item;\r\n    }\r\n\r\n    function itemText(item)\r\n    {\r\n        return this.itemValue(item);\r\n    }\r\n\r\n    function itemTitle(item)\r\n    {\r\n        return null;\r\n    }\r\n\r\n    function onTagExists(item, $tag)\r\n    {\r\n        $tag.hide().fadeIn();\r\n    }\r\n\r\n    function selectFirstSuggestion(){\r\n        $('.tt-suggestion.tt-selectable').first().addClass('tt-cursor');\r\n        console.log($('.tt-suggestion.tt-selectable'));\r\n    }\r\n\r\n    /**\r\n    * Constructor function\r\n    *\r\n    * @param element\r\n    * @param options\r\n    * @constructor\r\n    */\r\n    function TagsMaterialize(element, options)\r\n    {\r\n        this.itemsArray = [];\r\n\r\n        this.$element = $(element);\r\n        this.$element.hide();\r\n\r\n        this.objectItems    = options && options.itemValue;\r\n        this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\r\n        this.inputSize      = Math.max(1, this.placeholderText.length);\r\n\r\n        this.$container = $('<div class=\"materialize-tags\"></div>');\r\n        this.$input    = $('<input type=\"text\" class=\"n-tag\"  placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\r\n        this.$label    = this.$element.parent().find('label');\r\n\r\n        this.$element.before(this.$container);\r\n        this.build(options);\r\n\r\n        this.$label.on('click', function ()\r\n        {\r\n            $(this).addClass('active');\r\n            $(this).next('.materialize-tags').find('input.n-tag').focus();\r\n        });\r\n\r\n        this.$input.on('focus', function ()\r\n        {\r\n            var label = $(this).parents('.materialize-tags').parent().find('label');\r\n            $(this).parents('.materialize-tags').addClass('active');\r\n\r\n            if (!label.hasClass('active'))\r\n            {\r\n                label.addClass('active');\r\n            }\r\n        }).on('focusout', function ()\r\n        {\r\n            var parentContainer = $(this).parents('.materialize-tags'),\r\n                tags            = parentContainer.find('span.chip');\r\n            parentContainer.removeClass('active');\r\n            // Verify if is empty and remove \"active\" class from label\r\n            if (tags.length == 0 && $(this).val().length == 0)\r\n            {\r\n                parentContainer.parent().find('label').removeClass('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    TagsMaterialize.prototype = {\r\n        constructor : TagsMaterialize,\r\n\r\n        /**\r\n        * Adds the given item as a new tag. Pass true to dontPushVal to prevent\r\n        * updating the elements val()\r\n        *\r\n        * @param item\r\n        * @param dontPushVal\r\n        * @param options\r\n        */\r\n        add : function (item, dontPushVal, options)\r\n        {\r\n            var self = this;\r\n\r\n            if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // Ignore false values, except false\r\n            if (item !== false && !item)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // Trim value\r\n            if (typeof item === \"string\" && self.options.trimValue)\r\n            {\r\n                item = $.trim(item);\r\n            }\r\n\r\n            // CapitalizeFirstLetter\r\n            if (typeof item === \"string\" && self.options.CapitalizeFirstLetterOnly)\r\n            {\r\n                item = item.charAt(0).toUpperCase() + item.slice(1);\r\n            }\r\n\r\n            // Throw an error when trying to add an object while the itemValue option was not set\r\n            if (typeof item === \"object\" && !self.objectItems)\r\n            {\r\n                throw(\"Can't add objects when itemValue option is not set\");\r\n            }\r\n\r\n            // Ignore strings only contain whitespace\r\n            if (item.toString().match(/^\\s*$/))\r\n            {\r\n                return;\r\n            }\r\n\r\n            if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT')\r\n            {\r\n                var items = item.split(',');\r\n                if (items.length > 1)\r\n                {\r\n                    for (var i = 0; i < items.length; i++)\r\n                    {\r\n                        this.add(items[i], true);\r\n                    }\r\n\r\n                    if (!dontPushVal)\r\n                    {\r\n                        self.pushVal();\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var itemValue = self.options.itemValue(item),\r\n                itemText  = self.options.itemText(item),\r\n                tagClass  = self.options.tagClass(item),\r\n                itemTitle = self.options.itemTitle(item);\r\n\r\n            // Ignore items all ready added\r\n            var existing = $.grep(self.itemsArray, function (item) { return self.options.itemValue(item) === itemValue; })[0];\r\n            if (existing && !self.options.allowDuplicates)\r\n            {\r\n                // Invoke onTagExists\r\n                if (self.options.onTagExists)\r\n                {\r\n                    var $existingTag = $(\".tag\", self.$container).filter(function () { return $(this).data(\"item\") === existing; });\r\n                    self.options.onTagExists(item, $existingTag);\r\n                }\r\n                return;\r\n            }\r\n\r\n            // if length greater than limit\r\n            if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // raise beforeItemAdd arg\r\n            var beforeItemAddEvent = $.Event('beforeItemAdd', {item : item, cancel : false, options : options});\r\n            self.$element.trigger(beforeItemAddEvent);\r\n            if (beforeItemAddEvent.cancel)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // register item in internal array and map\r\n            self.itemsArray.push(item);\r\n\r\n            // add a tag element\r\n            var $tag = $('<span class=\"' + htmlEncode(tagClass) + (itemTitle !== null ? ('\" title=\"' + itemTitle) : '') + '\">' + htmlEncode(itemText) + '<i class=\"material-icons\" data-role=\"remove\">close</i></span>');\r\n            $tag.data('item', item);\r\n            self.findInputWrapper().before($tag);\r\n            $tag.after(' ');\r\n\r\n            if (!dontPushVal)\r\n            {\r\n                self.pushVal();\r\n            }\r\n\r\n            // Add class when reached maxTags\r\n            if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\r\n            {\r\n                self.$container.addClass('materialize-tags-max');\r\n                self.$input.blur();\r\n                self.$input.prop('readOnly', true);\r\n            }\r\n\r\n            self.$element.trigger($.Event('itemAdded', {item : item, options : options}));\r\n        },\r\n\r\n        /**\r\n        * Removes the given item. Pass true to dontPushVal to prevent updating the\r\n        * elements val()\r\n        *\r\n        * @param item\r\n        * @param dontPushVal\r\n        * @param options\r\n        */\r\n        remove : function (item, dontPushVal, options)\r\n        {\r\n            var self = this;\r\n\r\n            if (self.objectItems)\r\n            {\r\n                if (typeof item === \"object\")\r\n                {\r\n                    item = $.grep(self.itemsArray, function (other) { return self.options.itemValue(other) == self.options.itemValue(item); });\r\n                }\r\n                else\r\n                {\r\n                    item = $.grep(self.itemsArray, function (other) { return self.options.itemValue(other) == item; });\r\n                }\r\n\r\n                item = item[item.length - 1];\r\n            }\r\n\r\n            if (item)\r\n            {\r\n                var beforeItemRemoveEvent = $.Event('beforeItemRemove', {\r\n                    item    : item,\r\n                    cancel  : false,\r\n                    options : options\r\n                });\r\n                self.$element.trigger(beforeItemRemoveEvent);\r\n                if (beforeItemRemoveEvent.cancel)\r\n                {\r\n                    return;\r\n                }\r\n\r\n                $('.chip', self.$container).filter(function () { return $(this).data('item') === item; }).remove();\r\n\r\n                if ($.inArray(item, self.itemsArray) !== -1)\r\n                {\r\n                    self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\r\n                }\r\n            }\r\n\r\n            if (!dontPushVal)\r\n            {\r\n                self.pushVal();\r\n            }\r\n\r\n            // Remove class when reached maxTags\r\n            if (self.options.maxTags > self.itemsArray.length)\r\n            {\r\n                self.$container.removeClass('materialize-tags-max');\r\n                self.$input.prop('readOnly', false);\r\n            }\r\n\r\n\t\t\t// Remove active class when reached 0 tags\r\n            if (self.itemsArray.length == 0){\r\n\t\t\t\tself.$input.siblings(\"label\").first().removeClass('active');\r\n\t\t\t}\r\n\r\n            self.$input.blur();\r\n            self.$element.trigger($.Event('itemRemoved', {item : item, options : options}));\r\n        },\r\n\r\n        /**\r\n        * Removes all items\r\n        */\r\n        removeAll : function ()\r\n        {\r\n            var self = this;\r\n\r\n            $('.chip', self.$container).remove();\r\n\r\n            while (self.itemsArray.length > 0)\r\n            {\r\n                self.itemsArray.pop();\r\n            }\r\n\r\n            self.pushVal();\r\n            self.$container.removeClass('materialize-tags-max');\r\n\t\t\tself.$input.siblings(\"label\").first().removeClass('active');\r\n            self.$input.prop('readOnly', false);\r\n\t\t\tself.$input.blur();\r\n        },\r\n\r\n        /**\r\n        * Refreshes the tags so they match the text/value of their corresponding\r\n        * item.\r\n        */\r\n        refresh : function ()\r\n        {\r\n            var self = this;\r\n            $('.chip', self.$container).each(function ()\r\n            {\r\n                var $tag        = $(this),\r\n                    item        = $tag.data('item'),\r\n                    itemValue   = self.options.itemValue(item),\r\n                    itemText    = self.options.itemText(item),\r\n                    tagClass    = self.options.tagClass(item);\r\n\r\n                // Update tag's class and inner text\r\n                $tag.attr('class', null);\r\n                $tag.addClass('tag ' + htmlEncode(tagClass));\r\n                $tag.contents().filter(function ()\r\n                {\r\n                    return this.nodeType == 3;\r\n                })[0].nodeValue = htmlEncode(itemText);\r\n\r\n            });\r\n        },\r\n\r\n        /**\r\n        * Returns the items added as tags\r\n        */\r\n        items : function ()\r\n        {\r\n            return this.itemsArray;\r\n        },\r\n\r\n        /**\r\n        * Assembly value by retrieving the value of each item, and set it on the\r\n        * element.\r\n        */\r\n        pushVal : function ()\r\n        {\r\n            var self = this,\r\n                val  = $.map(self.items(), function (item)\r\n                {\r\n                    return self.options.itemValue(item).toString();\r\n                });\r\n\r\n            self.$element.val(val, true).trigger('change');\r\n            self.$input.typeahead('val', '');\r\n        },\r\n\r\n        /**\r\n        * Initializes the tags input behaviour on the element\r\n        *\r\n        * @param options\r\n        */\r\n        build : function (options)\r\n        {\r\n            var self = this;\r\n\r\n            self.options = $.extend({}, defaultOptions, options);\r\n            // When itemValue is set, freeInput should always be false\r\n\r\n            if (self.objectItems)\r\n            {\r\n                self.options.freeInput = false;\r\n            }\r\n\r\n            makeOptionItemFunction(self.options, 'itemValue');\r\n            makeOptionItemFunction(self.options, 'itemText');\r\n            makeOptionFunction(self.options, 'tagClass');\r\n\r\n            // Typeahead.js\r\n            if (self.options.typeaheadjs)\r\n            {\r\n                var typeaheadConfig   = null;\r\n                var typeaheadDatasets = {};\r\n\r\n                // Determine if main configurations were passed or simply a dataset\r\n                var typeaheadjs = self.options.typeaheadjs;\r\n                if ($.isArray(typeaheadjs))\r\n                {\r\n                    typeaheadConfig   = typeaheadjs[0];\r\n                    typeaheadDatasets = typeaheadjs[1];\r\n                }\r\n                else\r\n                {\r\n                    typeaheadDatasets = typeaheadjs;\r\n                }\r\n\r\n                self.$input.typeahead(typeaheadConfig, typeaheadDatasets).on('typeahead:selected', $.proxy(function (obj, datum)\r\n                {\r\n                    if (typeaheadDatasets.valueKey)\r\n                    {\r\n                        self.add(datum[typeaheadDatasets.valueKey]);\r\n                    }\r\n                    else\r\n                    {\r\n                        self.add(datum);\r\n                    }\r\n                    self.$input.typeahead('val', '');\r\n                }, self));\r\n            }\r\n\r\n            self.$container.on('click', $.proxy(function (event)\r\n            {\r\n                if (!self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.removeAttr('disabled');\r\n                }\r\n                self.$input.focus();\r\n            }, self));\r\n\r\n            if (self.options.addOnBlur && self.options.freeInput)\r\n            {\r\n                self.$input.on('focusout', $.proxy(function (event)\r\n                {\r\n                    self.add(self.$input.val());\r\n\r\n                }, self));\r\n            }\r\n\r\n            self.$container.on('keydown', 'input', $.proxy(function (event)\r\n            {\r\n                var $input        = $(event.target),\r\n                    $inputWrapper = self.findInputWrapper();\r\n\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.attr('disabled', 'disabled');\r\n                    return;\r\n                }\r\n\r\n                switch (event.which)\r\n                {\r\n                    // BACKSPACE\r\n                    case 8:\r\n                        if (self.options.deleteTagsOnBackspace && doGetCaretPosition($input[0]) === 0)\r\n                        {\r\n                            var prev = $inputWrapper.prev();\r\n                            if (prev)\r\n                            {\r\n                                self.remove(prev.data('item'));\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    // DELETE\r\n                    case 46:\r\n                        if (self.options.deleteTagsOnDeleteKey && doGetCaretPosition($input[0]) === 0)\r\n                        {\r\n                            var next = $inputWrapper.next();\r\n                            if (next)\r\n                            {\r\n                                self.remove(next.data('item'));\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    // LEFT ARROW\r\n                    case 37:\r\n                        // Try to move the input before the previous tag\r\n                        var $prevTag = $inputWrapper.prev();\r\n                        if (self.options.MoveTagOnLeftArrow && $input.val().length === 0 && $prevTag[0])\r\n                        {\r\n                            $prevTag.before($inputWrapper);\r\n                            $input.focus();\r\n                        }\r\n                        break;\r\n                    // RIGHT ARROW\r\n                    case 39:\r\n                        // Try to move the input after the next tag\r\n                        var $nextTag = $inputWrapper.next();\r\n                        if (self.options.MoveTagOnRightArrow && $input.val().length === 0 && $nextTag[0])\r\n                        {\r\n                            $nextTag.after($inputWrapper);\r\n                            $input.focus();\r\n                        }\r\n                        break;\r\n                    default:\r\n                    // ignore\r\n                }\r\n\r\n                // Reset internal input's size\r\n                var textLength = $input.val().length,\r\n                    wordSpace  = Math.ceil(textLength / 5),\r\n                    size       = textLength + wordSpace + 1;\r\n                $input.attr('size', Math.max(this.inputSize, $input.val().length));\r\n            }, self));\r\n\r\n            self.$container.on('keydown', 'input', $.proxy(function (event)\r\n            {\r\n                var $input = $(event.target);\r\n\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.attr('disabled', 'disabled');\r\n                    return;\r\n                }\r\n\r\n                var text            = $input.val(),\r\n                    maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\r\n                if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached))\r\n                {\r\n                    self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\r\n                    $input.val('');\r\n                    (self.$input.typeahead) && self.$input.typeahead(\"val\",\"\");\r\n                    event.preventDefault();\r\n                }\r\n\r\n                // Reset internal input's size\r\n                var textLength = $input.val().length,\r\n                    wordSpace  = Math.ceil(textLength / 5),\r\n                    size      = textLength + wordSpace + 1;\r\n                $input.attr('size', Math.max(this.inputSize, $input.val().length));\r\n            }, self));\r\n\r\n            // Remove icon clicked\r\n            self.$container.on('click', '[data-role=remove]', $.proxy(function (event)\r\n            {\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    return;\r\n                }\r\n                self.remove($(event.target).closest('.chip').data('item'));\r\n            }, self));\r\n\r\n            // Only add existing value as tags when using strings as tags\r\n            if (self.options.itemValue === defaultOptions.itemValue)\r\n            {\r\n                if (self.$element[0].tagName === 'INPUT')\r\n                {\r\n                    self.add(self.$element.val());\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Removes all materialtags behaviour and unregsiter all event handlers\r\n        */\r\n        destroy : function ()\r\n        {\r\n            var self = this;\r\n\r\n            // Unbind events\r\n            self.$container.off('keydown', 'input');\r\n            self.$container.off('click', '[role=remove]');\r\n\r\n            self.$container.remove();\r\n            self.$element.removeData('materialtags');\r\n            self.$element.show();\r\n        },\r\n\r\n        /**\r\n        * Sets focus on the materialtags\r\n        */\r\n        focus : function ()\r\n        {\r\n            this.$input.focus();\r\n        },\r\n\r\n        /**\r\n        * Returns the internal input element\r\n        */\r\n        input : function ()\r\n        {\r\n            return this.$input;\r\n        },\r\n\r\n        /**\r\n        * Returns the element which is wrapped around the internal input. This\r\n        * is normally the $container, but typeahead.js moves the $input element.\r\n        */\r\n        findInputWrapper : function ()\r\n        {\r\n            var elt      = this.$input[0],\r\n                container = this.$container[0];\r\n            while (elt && elt.parentNode !== container)\r\n            {\r\n                elt = elt.parentNode;\r\n            }\r\n\r\n            return $(elt);\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Register JQuery plugin\r\n    *\r\n    * @param arg1\r\n    * @param arg2\r\n    * @param arg3\r\n    * @returns {Array}\r\n    */\r\n    $.fn.materialtags = function (arg1, arg2, arg3)\r\n    {\r\n        var results = [];\r\n\r\n        this.each(function ()\r\n        {\r\n            var materialtags = $(this).data('materialtags');\r\n            // Initialize a new material tags input\r\n            if (!materialtags)\r\n            {\r\n                materialtags = new TagsMaterialize(this, arg1);\r\n                $(this).data('materialtags', materialtags);\r\n                results.push(materialtags);\r\n\r\n                // Init tags from $(this).val()\r\n                $(this).val($(this).val());\r\n            }\r\n            else if (!arg1 && !arg2)\r\n            {\r\n                // materialtags already exists\r\n                // no function, trying to init\r\n                results.push(materialtags);\r\n            }\r\n            else if (materialtags[arg1] !== undefined)\r\n            {\r\n                // Invoke function on existing tags input\r\n                if (materialtags[arg1].length === 3 && arg3 !== undefined)\r\n                {\r\n                    var retVal = materialtags[arg1](arg2, null, arg3);\r\n                }\r\n                else\r\n                {\r\n                    var retVal = materialtags[arg1](arg2);\r\n                }\r\n                if (retVal !== undefined)\r\n                {\r\n                    results.push(retVal);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (typeof arg1 == 'string')\r\n        {\r\n            // Return the results from the invoked function calls\r\n            return results.length > 1 ? results : results[0];\r\n        }\r\n        else\r\n        {\r\n            return results;\r\n        }\r\n    };\r\n\r\n    $.fn.materialtags.defaults = defaultOptions;\r\n    $.fn.materialtags.Constructor = TagsMaterialize;\r\n\r\n    /**\r\n    * Most options support both a string or number as well as a function as\r\n    * option value. This function makes sure that the option with the given\r\n    * key in the given options is wrapped in a function\r\n    *\r\n    * @param options\r\n    * @param key\r\n    */\r\n    function makeOptionItemFunction(options, key)\r\n    {\r\n        if (typeof options[key] !== 'function')\r\n        {\r\n            var propertyName = options[key];\r\n            options[key]    = function (item) { return item[propertyName]; };\r\n        }\r\n    }\r\n\r\n    function makeOptionFunction(options, key)\r\n    {\r\n        if (typeof options[key] !== 'function')\r\n        {\r\n            var value    = options[key];\r\n            options[key] = function () { return value; };\r\n        }\r\n    }\r\n\r\n    /**\r\n    * HtmlEncodes the given value\r\n    */\r\n    var htmlEncodeContainer = $('<div />');\r\n\r\n    function htmlEncode(value)\r\n    {\r\n        if (value)\r\n        {\r\n            return htmlEncodeContainer.text(value).html();\r\n        }\r\n        else\r\n        {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns the position of the caret in the given input field\r\n    * http://flightschool.acylt.com/devnotes/caret-position-woes/\r\n    *\r\n    * @param oField\r\n    * @returns {number}\r\n    */\r\n    function doGetCaretPosition(oField)\r\n    {\r\n        var iCaretPos = 0;\r\n        if (document.selection)\r\n        {\r\n            oField.focus();\r\n            var oSel  = document.selection.createRange();\r\n            oSel.moveStart('character', -oField.value.length);\r\n            iCaretPos = oSel.text.length;\r\n        }\r\n        else if (oField.selectionStart || oField.selectionStart == '0')\r\n        {\r\n            iCaretPos = oField.selectionStart;\r\n        }\r\n        return (iCaretPos);\r\n    }\r\n\r\n    /**\r\n    * Returns boolean indicates whether user has pressed an expected key combination.\r\n    * http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\n    * [13, {which: 188, shiftKey: true}]\r\n    *\r\n    * @param keyDownEvent\r\n    * @param lookupList\r\n    * @returns {boolean}\r\n    */\r\n    function keyCombinationInList(keyDownEvent, lookupList)\r\n    {\r\n        var found = false;\r\n        $.each(lookupList, function (index, keyCombination)\r\n        {\r\n            if (typeof (keyCombination) === 'number' && keyDownEvent.which === keyCombination)\r\n            {\r\n                found = true;\r\n                return false;\r\n            }\r\n\r\n            if (keyDownEvent.which === keyCombination.which)\r\n            {\r\n                var alt   = !keyCombination.hasOwnProperty('altKey') || keyDownEvent.altKey === keyCombination.altKey,\r\n                    shift = !keyCombination.hasOwnProperty('shiftKey') || keyDownEvent.shiftKey === keyCombination.shiftKey,\r\n                    ctrl  = !keyCombination.hasOwnProperty('ctrlKey') || keyDownEvent.ctrlKey === keyCombination.ctrlKey;\r\n                if (alt && shift && ctrl)\r\n                {\r\n                    found = true;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n    * Initialize materialtags behaviour on inputs which have\r\n    * data-role=materialtags\r\n    */\r\n    $(function ()\r\n    {\r\n        $(\"input[data-role=materialtags]\").materialtags();\r\n    });\r\n})(window.jQuery);\r\n"]}